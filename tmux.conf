# COLOURS
# vim theme: colour24
# colour 193 + colour23
set-option -g display-panes-active-colour red
set-option -g display-panes-colour green
#Invalid option - something's changed?
# set-option -g message-command-attr none
# set-option -g message-command-bg yellow
# set-option -g message-command-fg default
# set-option -g message-fg default
# set-option -g message-attr bold
# set-option -g message-bg blue

#set-option -g pane-active-border-bg default
#set-option -g pane-active-border-fg colour193
#set-option -g pane-border-bg default
#set-option -g pane-border-fg default

# STATUS BAR
set-option -g status on
set-option -g status-interval 15
# set-option -g status-justify left # Invalid option
set-option -g status-keys emacs
# set-option -g status-left-attr bold
set-option -g status-bg default
#set-option -g status-fg colour193
set-option -g status-fg green
# set-option -g status-attr bold
set-option -g status-position bottom
#set-option -g status-utf8 on

#set -g status-left '#[fg=colour193,bg=black,bold] #S |' 

set -g status-left ' #S |' 
if-shell '[ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]' "set -g status-left ' #[bg=red,fg=#000000,bold] SSH #[bg=default,fg=default] #S |' "
#set-option -g status-left-bg black
#set-option -g status-left-fg colour193
set-option -g status-left-length 15

# set-option -g status-right ""#22T" %H:%M %d-%b-%y"

#set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]:: %d %b %Y #[fg=green]:: %l:%M %p :: #(date -u | awk '{print $4}')::"
# previously: colour169
set-option -g status-right "#[fg=red,bold]#h #(ip addr show | grep 'inet[^6]' | grep -v 127 | awk '{print $2}')"
set-option -g status-right-length 60

# set different colours for different hosts
#if-shell '[ "$HOSTNAME" = "Altzmyr" ]' "set-option -g status-right-fg colour168"
#if-shell '[ "$HOSTNAME" = "localhost" ]' "set -g status-right '#[fg=colour169]#T '" ""
#if-shell '[ "$HOSTNAME" = "Osiris" ]' "set -g status-right '#[fg=colour169]#T '" ""


# TABS ON THE STATUS BAR
set -g window-status-format " #I #W"

#set-window-option -g window-status-current-bg black
#set-window-option -g window-status-current-fg brightblue
set -g window-status-current-format "#[fg=yellow] #I #W"  #[fg=brightblue,bg=black]" #123
#set -g window-status-current-attr bold

#set -g window-status-activity-attr bold

set-option -g set-titles on
set -g set-titles-string "#S:#I:#W-"#T""


# Powerline
#set -g status-left-length 32
#set -g status-right-length 150
#set -g status-interval 5
## Lets add the current weather to our status bar—why? Well Why the french-toast not?
#set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour238,nobold]#[fg=colour15,bg=colour238,bold] #(weathermajig boulder --short) #[fg=colour238,bg=colour234,nobold]'
#set -g status-right '#[fg=colour245]❬ %R ❬ %d %b #[fg=colour254,bg=colour234,nobold]#(rdio-current-track-tmux)#[fg=colour16,bg=colour254,bold] #h '
#set -g window-status-format "#[fg=white,bg=colour234] #I #W "
#set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour16,bg=colour39,noreverse,bold] #I ❭ #W #[fg=colour39,bg=colour234,nobold]"



### MOVEMENT, PANES, ...

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#M is Alt
bind-key -n M-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n M-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# use PREFIX S-j and S-k o cycle through all sessionh
bind J switch-client -n
bind K switch-client -p

#(zanshin.net)
# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind v split-window -h
bind s split-window -v

# layouts tiled, even-horizontal, even-vertical, main-horizontal, main-vertical
#bind-key 'C-=' select-layout "tiled"
#bind-key 'C--' select-layout "even-vertical"
#bind-key 'C-\' select-layout "even-horizontal"
# C-s M-1 -> even-vertical


# map Vi movement keys as pane movement keys (without prefix)
# C Ctrl, M is meta=Alt
#bind -n M-h select-pane -L
#bind -n M-j select-pane -D 
#bind -n M-k select-pane -U
#bind -n M-l select-pane -R

# and use C-h and C-l to cycle thru panes
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize panes using PREFIX
bind < resize-pane -L 10 
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# start naming from 1
set -g base-index 1
setw -g pane-base-index 1


### OTHER
# Vim
set -sg escape-time 0


set-option -g assume-paste-time 1
set-option -g base-index 0
set-option -g bell-action any
#set-option -g bell-on-alert off
set-option -g default-command ""
#set-option -g default-path ""
# changed this from bash ATT
set-option -g default-shell "/bin/zsh"
set-option -g default-terminal "screen-256color" # I think some vim plugins need this (ScreenShell)
#set-option -g default-terminal "xterm"
set-option -g destroy-unattached off
set-option -g detach-on-destroy on

set-option -g display-panes-time 1000
set-option -g display-time 4000 # display errors / messages for X miliseconds

# scrolling
set-option -g history-limit 10000
set-option -g lock-after-time 0
set-option -g lock-command "lock -np"
#set-option -g lock-server on
set-option -g message-limit 20
#set-option -g mouse-resize-pane off
#set-option -g mouse-select-pane off
#set-option -g mouse-select-window off
#set-option -g mouse-utf8 on
set-option -g prefix C-s
set-option -g renumber-windows on
set-option -g repeat-time 500
set -g remain-on-exit off

set-option -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
set-option -g visual-activity off
set-option -g visual-bell off
#set-option -g visual-content off
set-option -g visual-silence off
set-option -g word-separators " -_@"
#done

### COPY MODE (PREFIX [ )
setw -g mode-keys vi
#bind-key -t vi-copy 'd' page-down
#bind-key -t vi-copy 'e' page-up
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
